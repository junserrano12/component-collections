@mixin breakpoint($point) {
    @if $point == xs {
        @media (max-width: 767.98px) { @content; }
    }
    @else if $point == sm {
        @media (max-width: 991.98px) { @content; }
    }
    @else if $point == md {
        @media (max-width:1199.98px) { @content; }
    }
    @else if $point == lg {
        @media (min-width:1920px) { @content; }
    }
}

@mixin breakpoint-down($point) {
    @if $point == xs {
        @media (max-width: 575.98px) { @content; }
    }
    @else if $point == sm {
        @media (max-width: 767.98px) { @content; }
    }
    @else if $point == md {
        @media (max-width: 991.98px) { @content; }
    }
    @else if $point == lg {
        @media (max-width: 1199.98px) { @content; }
    }
}

@mixin breakpoint-up($point) {
    @if $point == sm {
        @media (min-width: 576px) { @content; }
    }
    @else if $point == md {
        @media (min-width: 768px) { @content; }
    }
    @else if $point == lg {
        @media (min-width: 992px) { @content; }
    }
    @else if $point == xl {
        @media (min-width: 1200px) { @content; }
    }
}

@mixin breakpoint-only($point) {
    @if $point == xs {
        @media (max-width: 575.98px) { @content; }
    }
    @else if $point == sm {
        @media (min-width: 576px) and (max-width: 767.98px) { @content; }
    }
    @else if $point == md {
        @media (min-width: 768px) and (max-width: 991.98px) { @content; }
    }
    @else if $point == lg {
        @media (min-width: 992px) and (max-width: 1199.98px) { @content; }
    }
    @else if $point == xl {
        @media (min-width: 1200px) { @content; }
    }

}

$default-legacy-ie: 7 8 9 !default;
@mixin legacy-ie($versions: $default-legacy-ie) {
    $sel: ();
    @each $v in $versions {
        $sel: append($sel, unquote('.ie#{$v} &'), comma);
    }

    #{$sel} {
        @content;
    }
}

@mixin equalliheight($max: 8) {
    @for $i from 1 through $max {
        li:first-child:nth-last-child(#{$i}),
        li:first-child:nth-last-child(#{$i}) ~ li {
            height: 100% / $i;
        }
    }
}

@mixin equalliwidth($max: 8) {
    @for $i from 1 through $max {
        li:first-child:nth-last-child(#{$i}),
        li:first-child:nth-last-child(#{$i}) ~ li {
            width: 100% / $i;
        }
    }
}

@mixin gradient($grfrom: #ffe042, $grto: #ff931f) {
  background: $grfrom;
  background: -moz-linear-gradient(top, $grfrom 1%, $grto 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(1%, $grfrom), color-stop(100%, $grto));
  background: -webkit-linear-gradient(top, $grfrom 1%, $grto 100%);
  background: -o-linear-gradient(top, $grfrom 1%, $grto 100%);
  background: -ms-linear-gradient(top, $grfrom 1%, $grto 100%);
  background: linear-gradient(to bottom, $grfrom 1%, $grto 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$grfrom', endColorstr='$grto',GradientType=0 );

  @include legacy-ie {
    filter: none;
  }
}

@mixin menuicon($lineheight: 4px, $color: #fff) {
    .line {
        position:absolute;
        height: $lineheight;
        width: 80%;
        left: 10%;
        top: $lineheight * 3;
        background-color: $color;

        &:before, &:after {
            content:"";
            position: absolute;
            display: block;
            left: 0;
            width: 100%;
            height: $lineheight;
            background-color: $color;
            -webkit-transition-duration: 0.3s, 0.3s;
                    transition-duration: 0.3s, 0.3s;
            -webkit-transition-delay: 0.3s, 0s;
                    transition-delay: 0.3s, 0s;
        }

        &:before {
            top: -8px;
            -webkit-transition-property: top, -webkit-transform;
                    transition-property: top, transform;

        }

        &:after {
            bottom: -8px;
            -webkit-transition-property: bottom, -webkit-transform;
                    transition-property: bottom, transform;
        }
    }

    &.cross {
        .line {
            background: none;
        }

        .line:before  {
            top: 0;
            -webkit-transform: rotate(45deg);
                -ms-transform: rotate(45deg);
                    transform: rotate(45deg);
        }

        .line:after  {
            bottom: 0;
            -webkit-transform: rotate(-45deg);
                -ms-transform: rotate(-45deg);
                    transform: rotate(-45deg);
        }

        .line:before, .line:after  {
            position: absolute;
            -webkit-transition-delay: 0s, 0.3s;
                -ms-transition-delay: 0s, 0.3s;
                    transition-delay: 0s, 0.3s;
        }
    }
}